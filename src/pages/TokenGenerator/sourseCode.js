export const sourseCode = (network) => {
  if (network === "StandardERC20") {
    return "Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVApwcmFnbWEgc29saWRpdHkgMC44LjI0OwoKaW1wb3J0IHtFUkMyMH0gZnJvbSAiQG9wZW56ZXBwZWxpbi9jb250cmFjdHMvdG9rZW4vRVJDMjAvRVJDMjAuc29sIjsKCgovLy8gQHRpdGxlIERlZmF1bHRFUkMyMCBDb250cmFjdAovLy8gQG5vdGljZSBUaGlzIGNvbnRyYWN0IHJlcHJlc2VudHMgYSBkZWZhdWx0IEVSQzIwIHRva2VuLgpjb250cmFjdCBEZWZhdWx0RVJDMjAgaXMgRVJDMjAgewogICAgY29uc3RydWN0b3IgKAogICAgICAgIHN0cmluZyBtZW1vcnkgX25hbWUsCiAgICAgICAgc3RyaW5nIG1lbW9yeSBfc3ltYm9sLAogICAgICAgIHVpbnQyNTYgX3ByZW1pbnQsCiAgICAgICAgYWRkcmVzcyBfaW5pdGlhbE93bmVyCiAgICApcGF5YWJsZSBFUkMyMChfbmFtZSwgX3N5bWJvbCkgewogICAgICAgIF9taW50KF9pbml0aWFsT3duZXIsIF9wcmVtaW50ICogMTAqKmRlY2ltYWxzKCkpOwogICAgfQp9Cg==";
  }
  if (network === "SuperCappedERC20") {
    return "Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVApwcmFnbWEgc29saWRpdHkgMC44LjI0OwoKaW1wb3J0IHtFUkMyMH0gZnJvbSAiQG9wZW56ZXBwZWxpbi9jb250cmFjdHMvdG9rZW4vRVJDMjAvRVJDMjAuc29sIjsKaW1wb3J0IHtFUkMyMEJ1cm5hYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwQnVybmFibGUuc29sIjsKaW1wb3J0IHtFUkMyMFBhdXNhYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwUGF1c2FibGUuc29sIjsKaW1wb3J0IHtPd25hYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy9hY2Nlc3MvT3duYWJsZS5zb2wiOwppbXBvcnQge0VSQzIwQ2FwcGVkfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwQ2FwcGVkLnNvbCI7Cgpjb250cmFjdCBTdXBlckVSQzIwQ2FwcGVkIGlzCiAgICBFUkMyMCwKICAgIEVSQzIwQnVybmFibGUsCiAgICBFUkMyMFBhdXNhYmxlLAogICAgT3duYWJsZSwKICAgIEVSQzIwQ2FwcGVkCnsKICAgIGJvb2wgcHVibGljIG1pbnRhYmxlOwogICAgYm9vbCBwdWJsaWMgYnVybmFibGU7CiAgICBib29sIHB1YmxpYyBwYXVzYWJsZTsKCiAgICBlcnJvciBub3RNaW50YWJsZSgpOwogICAgZXJyb3Igbm90QnVybmFibGUoKTsKICAgIGVycm9yIG5vdFBhdXNhYmxlKCk7CiAgICBlcnJvciBpc01pbnRhYmxlTm93KCk7CiAgICBlcnJvciBpc0J1cm5hYmxlTm93KCk7CiAgICBlcnJvciBpc1BhdXNhYmxlTm93KCk7CgogICAgbW9kaWZpZXIgaXNNaW50YWJsZSgpIHsKICAgICAgICBpZiAoIW1pbnRhYmxlKSB7CiAgICAgICAgICAgIHJldmVydCBub3RNaW50YWJsZSgpOwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIGlzQnVybmFibGUoKSB7CiAgICAgICAgaWYgKCFidXJuYWJsZSkgewogICAgICAgICAgICByZXZlcnQgbm90QnVybmFibGUoKTsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciBpc1BhdXNhYmxlKCkgewogICAgICAgIGlmICghcGF1c2FibGUpIHsKICAgICAgICAgICAgcmV2ZXJ0IG5vdFBhdXNhYmxlKCk7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgY29uc3RydWN0b3IoCiAgICAgICAgc3RyaW5nIG1lbW9yeSBfbmFtZSwKICAgICAgICBzdHJpbmcgbWVtb3J5IF9zeW1ib2wsCiAgICAgICAgdWludDI1NiBfcHJlbWludCwKICAgICAgICBhZGRyZXNzIF9pbml0aWFsT3duZXIsCiAgICAgICAgYm9vbCBfbWludGFibGUsCiAgICAgICAgYm9vbCBfYnVybmFibGUsCiAgICAgICAgYm9vbCBfcGF1c2FibGUsCiAgICAgICAgdWludDI1NiBfY2FwCiAgICApCiAgICAgICAgcGF5YWJsZQogICAgICAgIEVSQzIwKF9uYW1lLCBfc3ltYm9sKQogICAgICAgIE93bmFibGUoX2luaXRpYWxPd25lcikKICAgICAgICBFUkMyMENhcHBlZChfY2FwICogMTAgKiogZGVjaW1hbHMoKSkKICAgIHsKICAgICAgICBtaW50YWJsZSA9IF9taW50YWJsZTsKICAgICAgICBidXJuYWJsZSA9IF9idXJuYWJsZTsKICAgICAgICBwYXVzYWJsZSA9IF9wYXVzYWJsZTsKICAgICAgICBfbWludChfaW5pdGlhbE93bmVyLCBfcHJlbWludCAqIDEwICoqIGRlY2ltYWxzKCkpOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldE1pbnRhYmxlKCkgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgICAgICBpZiAobWludGFibGUpIHsKICAgICAgICAgICAgcmV2ZXJ0IGlzTWludGFibGVOb3coKTsKICAgICAgICB9CiAgICAgICAgbWludGFibGUgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldFVubWludGFibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmICghbWludGFibGUpIHsKICAgICAgICAgICAgcmV2ZXJ0IG5vdE1pbnRhYmxlKCk7CiAgICAgICAgfQogICAgICAgIG1pbnRhYmxlID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0QnVybmFibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmIChidXJuYWJsZSkgewogICAgICAgICAgICByZXZlcnQgaXNCdXJuYWJsZU5vdygpOwogICAgICAgIH0KICAgICAgICBidXJuYWJsZSA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0VW5idXJuYWJsZSgpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgaWYgKCFidXJuYWJsZSkgewogICAgICAgICAgICByZXZlcnQgbm90QnVybmFibGUoKTsKICAgICAgICB9CiAgICAgICAgYnVybmFibGUgPSBmYWxzZTsKICAgIH0KCiAgICBmdW5jdGlvbiBzZXRQYXVzYWJsZSgpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgaWYgKHBhdXNhYmxlKSB7CiAgICAgICAgICAgIHJldmVydCBpc1BhdXNhYmxlTm93KCk7CiAgICAgICAgfQogICAgICAgIHBhdXNhYmxlID0gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBzZXRVbnBhdXNhYmxlKCkgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgICAgICBpZiAoIXBhdXNhYmxlKSB7CiAgICAgICAgICAgIHJldmVydCBub3RQYXVzYWJsZSgpOwogICAgICAgIH0KICAgICAgICBwYXVzYWJsZSA9IGZhbHNlOwogICAgfQoKICAgIC8vLyBAbm90aWNlIFBhdXNlcyBhbGwgdG9rZW4gdHJhbnNmZXJzLgogICAgZnVuY3Rpb24gcGF1c2UoKSBleHRlcm5hbCBvbmx5T3duZXIgaXNQYXVzYWJsZSB7CiAgICAgICAgX3BhdXNlKCk7CiAgICB9CgogICAgLy8vIEBub3RpY2UgVW5wYXVzZXMgdG9rZW4gdHJhbnNmZXJzLgogICAgZnVuY3Rpb24gdW5wYXVzZSgpIGV4dGVybmFsIG9ubHlPd25lciBpc1BhdXNhYmxlIHsKICAgICAgICBfdW5wYXVzZSgpOwogICAgfQoKICAgIC8vLyBAbm90aWNlIE1pbnRzIGFkZGl0aW9uYWwgdG9rZW5zIGFuZCBhc3NpZ25zIHRoZW0gdG8gdGhlIHNwZWNpZmllZCBhZGRyZXNzLgogICAgLy8vIEBwYXJhbSB0byBUaGUgYWRkcmVzcyB0byByZWNlaXZlIHRoZSBtaW50ZWQgdG9rZW5zLgogICAgLy8vIEBwYXJhbSBhbW91bnQgVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gbWludC4KICAgIGZ1bmN0aW9uIG1pbnQoYWRkcmVzcyB0bywgdWludDI1NiBhbW91bnQpIGV4dGVybmFsIG9ubHlPd25lciBpc01pbnRhYmxlIHsKICAgICAgICBfbWludCh0bywgYW1vdW50KTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgdmFsdWUpIHB1YmxpYyBvdmVycmlkZSBpc0J1cm5hYmxlIHsKICAgICAgICBfYnVybihfbXNnU2VuZGVyKCksIHZhbHVlKTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXJuRnJvbSgKICAgICAgICBhZGRyZXNzIGFjY291bnQsCiAgICAgICAgdWludDI1NiB2YWx1ZQogICAgKSBwdWJsaWMgb3ZlcnJpZGUgaXNCdXJuYWJsZSB7CiAgICAgICAgX3NwZW5kQWxsb3dhbmNlKGFjY291bnQsIF9tc2dTZW5kZXIoKSwgdmFsdWUpOwogICAgICAgIF9idXJuKGFjY291bnQsIHZhbHVlKTsKICAgIH0KCiAgICAvLy8gQGRldiBPdmVycmlkZXMgdGhlIGludGVybmFsIF91cGRhdGUgZnVuY3Rpb24gdG8gaW5jbHVkZSBwYXVzYWJsZSBiZWhhdmlvci4KICAgIGZ1bmN0aW9uIF91cGRhdGUoCiAgICAgICAgYWRkcmVzcyBmcm9tLAogICAgICAgIGFkZHJlc3MgdG8sCiAgICAgICAgdWludDI1NiB2YWx1ZQogICAgKSBpbnRlcm5hbCBvdmVycmlkZShFUkMyMCwgRVJDMjBQYXVzYWJsZSwgRVJDMjBDYXBwZWQpIHsKICAgICAgICBzdXBlci5fdXBkYXRlKGZyb20sIHRvLCB2YWx1ZSk7CiAgICB9Cn0K";
  }
  if (network === "SuperPermitERC20") {
    return "Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVApwcmFnbWEgc29saWRpdHkgMC44LjI0OwoKaW1wb3J0IHtFUkMyMH0gZnJvbSAiQG9wZW56ZXBwZWxpbi9jb250cmFjdHMvdG9rZW4vRVJDMjAvRVJDMjAuc29sIjsKaW1wb3J0IHtFUkMyMEJ1cm5hYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwQnVybmFibGUuc29sIjsKaW1wb3J0IHtFUkMyMFBhdXNhYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwUGF1c2FibGUuc29sIjsKaW1wb3J0IHtPd25hYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy9hY2Nlc3MvT3duYWJsZS5zb2wiOwppbXBvcnQge0VSQzIwUGVybWl0fSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwUGVybWl0LnNvbCI7Cgpjb250cmFjdCBTdXBlckVSQzIwUGVybWl0IGlzCiAgICBFUkMyMCwKICAgIEVSQzIwQnVybmFibGUsCiAgICBFUkMyMFBhdXNhYmxlLAogICAgT3duYWJsZSwKICAgIEVSQzIwUGVybWl0CnsKICAgIGJvb2wgcHVibGljIG1pbnRhYmxlOwogICAgYm9vbCBwdWJsaWMgYnVybmFibGU7CiAgICBib29sIHB1YmxpYyBwYXVzYWJsZTsKCiAgICBlcnJvciBub3RNaW50YWJsZSgpOwogICAgZXJyb3Igbm90QnVybmFibGUoKTsKICAgIGVycm9yIG5vdFBhdXNhYmxlKCk7CiAgICBlcnJvciBpc01pbnRhYmxlTm93KCk7CiAgICBlcnJvciBpc0J1cm5hYmxlTm93KCk7CiAgICBlcnJvciBpc1BhdXNhYmxlTm93KCk7CgogICAgbW9kaWZpZXIgaXNNaW50YWJsZSgpIHsKICAgICAgICBpZiAoIW1pbnRhYmxlKSB7CiAgICAgICAgICAgIHJldmVydCBub3RNaW50YWJsZSgpOwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKICAgIG1vZGlmaWVyIGlzQnVybmFibGUoKSB7CiAgICAgICAgaWYgKCFidXJuYWJsZSkgewogICAgICAgICAgICByZXZlcnQgbm90QnVybmFibGUoKTsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciBpc1BhdXNhYmxlKCkgewogICAgICAgIGlmICghcGF1c2FibGUpIHsKICAgICAgICAgICAgcmV2ZXJ0IG5vdFBhdXNhYmxlKCk7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgY29uc3RydWN0b3IoCiAgICAgICAgc3RyaW5nIG1lbW9yeSBfbmFtZSwKICAgICAgICBzdHJpbmcgbWVtb3J5IF9zeW1ib2wsCiAgICAgICAgdWludDI1NiBfcHJlbWludCwKICAgICAgICBhZGRyZXNzIF9pbml0aWFsT3duZXIsCiAgICAgICAgYm9vbCBfbWludGFibGUsCiAgICAgICAgYm9vbCBfYnVybmFibGUsCiAgICAgICAgYm9vbCBfcGF1c2FibGUKICAgICkgcGF5YWJsZSBFUkMyMChfbmFtZSwgX3N5bWJvbCkgT3duYWJsZShfaW5pdGlhbE93bmVyKSBFUkMyMFBlcm1pdChfbmFtZSkgewogICAgICAgIG1pbnRhYmxlID0gX21pbnRhYmxlOwogICAgICAgIGJ1cm5hYmxlID0gX2J1cm5hYmxlOwogICAgICAgIHBhdXNhYmxlID0gX3BhdXNhYmxlOwogICAgICAgIF9taW50KF9pbml0aWFsT3duZXIsIF9wcmVtaW50ICogMTAqKmRlY2ltYWxzKCkpOwogICAgfQoKCgogICAgZnVuY3Rpb24gc2V0TWludGFibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmKG1pbnRhYmxlKXsKICAgICAgICAgICAgcmV2ZXJ0IGlzTWludGFibGVOb3coKTsKICAgICAgICB9ICAgICAgICAKICAgICAgICBtaW50YWJsZSA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0VW5taW50YWJsZSgpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgaWYoIW1pbnRhYmxlKXsKICAgICAgICAgICAgcmV2ZXJ0IG5vdE1pbnRhYmxlKCk7CiAgICAgICAgfQogICAgICAgIG1pbnRhYmxlID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0QnVybmFibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmKGJ1cm5hYmxlKXsKICAgICAgICAgICAgcmV2ZXJ0IGlzQnVybmFibGVOb3coKTsKICAgICAgICB9ICAgICAgICAKICAgICAgICBidXJuYWJsZSA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0VW5idXJuYWJsZSgpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgaWYoIWJ1cm5hYmxlKXsKICAgICAgICAgICAgcmV2ZXJ0IG5vdEJ1cm5hYmxlKCk7CiAgICAgICAgfQogICAgICAgIGJ1cm5hYmxlID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0UGF1c2FibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmKHBhdXNhYmxlKXsKICAgICAgICAgICAgcmV2ZXJ0IGlzUGF1c2FibGVOb3coKTsKICAgICAgICB9CiAgICAgICAgcGF1c2FibGUgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldFVucGF1c2FibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmKCFwYXVzYWJsZSl7CiAgICAgICAgICAgIHJldmVydCBub3RQYXVzYWJsZSgpOwogICAgICAgIH0gICAgICAgIAogICAgICAgIHBhdXNhYmxlID0gZmFsc2U7CiAgICB9CgogICAgLy8vIEBub3RpY2UgUGF1c2VzIGFsbCB0b2tlbiB0cmFuc2ZlcnMuCiAgICBmdW5jdGlvbiBwYXVzZSgpIGV4dGVybmFsIG9ubHlPd25lciBpc1BhdXNhYmxlIHsKICAgICAgICBfcGF1c2UoKTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBVbnBhdXNlcyB0b2tlbiB0cmFuc2ZlcnMuCiAgICBmdW5jdGlvbiB1bnBhdXNlKCkgZXh0ZXJuYWwgb25seU93bmVyIGlzUGF1c2FibGUgewogICAgICAgIF91bnBhdXNlKCk7CiAgICB9CgogICAgLy8vIEBub3RpY2UgTWludHMgYWRkaXRpb25hbCB0b2tlbnMgYW5kIGFzc2lnbnMgdGhlbSB0byB0aGUgc3BlY2lmaWVkIGFkZHJlc3MuCiAgICAvLy8gQHBhcmFtIHRvIFRoZSBhZGRyZXNzIHRvIHJlY2VpdmUgdGhlIG1pbnRlZCB0b2tlbnMuCiAgICAvLy8gQHBhcmFtIGFtb3VudCBUaGUgYW1vdW50IG9mIHRva2VucyB0byBtaW50LgogICAgZnVuY3Rpb24gbWludChhZGRyZXNzIHRvLCB1aW50MjU2IGFtb3VudCkgZXh0ZXJuYWwgb25seU93bmVyIGlzTWludGFibGUgewogICAgICAgIF9taW50KHRvLCBhbW91bnQpOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1cm4odWludDI1NiB2YWx1ZSkgcHVibGljIG92ZXJyaWRlIGlzQnVybmFibGUgewogICAgICAgIF9idXJuKF9tc2dTZW5kZXIoKSwgdmFsdWUpOwogICAgfQoKICAgIGZ1bmN0aW9uIGJ1cm5Gcm9tKGFkZHJlc3MgYWNjb3VudCwgdWludDI1NiB2YWx1ZSkKICAgICAgICBwdWJsaWMKICAgICAgICBvdmVycmlkZQogICAgICAgIGlzQnVybmFibGUKICAgIHsKICAgICAgICBfc3BlbmRBbGxvd2FuY2UoYWNjb3VudCwgX21zZ1NlbmRlcigpLCB2YWx1ZSk7CiAgICAgICAgX2J1cm4oYWNjb3VudCwgdmFsdWUpOwogICAgfQoKICAgIC8vLyBAZGV2IE92ZXJyaWRlcyB0aGUgaW50ZXJuYWwgX3VwZGF0ZSBmdW5jdGlvbiB0byBpbmNsdWRlIHBhdXNhYmxlIGJlaGF2aW9yLgogICAgZnVuY3Rpb24gX3VwZGF0ZSgKICAgICAgICBhZGRyZXNzIGZyb20sCiAgICAgICAgYWRkcmVzcyB0bywKICAgICAgICB1aW50MjU2IHZhbHVlCiAgICApIGludGVybmFsIG92ZXJyaWRlKEVSQzIwLCBFUkMyMFBhdXNhYmxlKSB7CiAgICAgICAgc3VwZXIuX3VwZGF0ZShmcm9tLCB0bywgdmFsdWUpOwogICAgfQp9Cg==";
  }
  if (network === "UltimateERC20") {
    return "Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVApwcmFnbWEgc29saWRpdHkgMC44LjI0OwoKaW1wb3J0IHtFUkMyMH0gZnJvbSAiQG9wZW56ZXBwZWxpbi9jb250cmFjdHMvdG9rZW4vRVJDMjAvRVJDMjAuc29sIjsKaW1wb3J0IHtFUkMyMEJ1cm5hYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwQnVybmFibGUuc29sIjsKaW1wb3J0IHtFUkMyMFBhdXNhYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwUGF1c2FibGUuc29sIjsKaW1wb3J0IHtPd25hYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy9hY2Nlc3MvT3duYWJsZS5zb2wiOwppbXBvcnQge0VSQzIwQ2FwcGVkfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwQ2FwcGVkLnNvbCI7CmltcG9ydCB7RVJDMjBQZXJtaXR9IGZyb20gIkBvcGVuemVwcGVsaW4vY29udHJhY3RzL3Rva2VuL0VSQzIwL2V4dGVuc2lvbnMvRVJDMjBQZXJtaXQuc29sIjsKCmNvbnRyYWN0IFVsdGltYXRlVG9rZW4gaXMKICAgIEVSQzIwLAogICAgRVJDMjBCdXJuYWJsZSwKICAgIEVSQzIwUGF1c2FibGUsCiAgICBPd25hYmxlLAogICAgRVJDMjBDYXBwZWQsCiAgICBFUkMyMFBlcm1pdAp7CiAgICBib29sIHB1YmxpYyBtaW50YWJsZTsKICAgIGJvb2wgcHVibGljIGJ1cm5hYmxlOwogICAgYm9vbCBwdWJsaWMgcGF1c2FibGU7CgogICAgZXJyb3Igbm90TWludGFibGUoKTsKICAgIGVycm9yIG5vdEJ1cm5hYmxlKCk7CiAgICBlcnJvciBub3RQYXVzYWJsZSgpOwogICAgZXJyb3IgaXNNaW50YWJsZU5vdygpOwogICAgZXJyb3IgaXNCdXJuYWJsZU5vdygpOwogICAgZXJyb3IgaXNQYXVzYWJsZU5vdygpOwoKICAgIG1vZGlmaWVyIGlzTWludGFibGUoKSB7CiAgICAgICAgaWYgKCFtaW50YWJsZSkgewogICAgICAgICAgICByZXZlcnQgbm90TWludGFibGUoKTsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciBpc0J1cm5hYmxlKCkgewogICAgICAgIGlmICghYnVybmFibGUpIHsKICAgICAgICAgICAgcmV2ZXJ0IG5vdEJ1cm5hYmxlKCk7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgbW9kaWZpZXIgaXNQYXVzYWJsZSgpIHsKICAgICAgICBpZiAoIXBhdXNhYmxlKSB7CiAgICAgICAgICAgIHJldmVydCBub3RQYXVzYWJsZSgpOwogICAgICAgIH0KICAgICAgICBfOwogICAgfQoKICAgIGNvbnN0cnVjdG9yKAogICAgICAgIHN0cmluZyBtZW1vcnkgX25hbWUsCiAgICAgICAgc3RyaW5nIG1lbW9yeSBfc3ltYm9sLAogICAgICAgIHVpbnQyNTYgX3ByZW1pbnQsCiAgICAgICAgYWRkcmVzcyBfaW5pdGlhbE93bmVyLAogICAgICAgIGJvb2wgX21pbnRhYmxlLAogICAgICAgIGJvb2wgX2J1cm5hYmxlLAogICAgICAgIGJvb2wgX3BhdXNhYmxlLAogICAgICAgIHVpbnQyNTYgX2NhcAogICAgKQogICAgICAgIHBheWFibGUKICAgICAgICBFUkMyMChfbmFtZSwgX3N5bWJvbCkKICAgICAgICBPd25hYmxlKF9pbml0aWFsT3duZXIpCiAgICAgICAgRVJDMjBDYXBwZWQoX2NhcCAqIDEwICoqIGRlY2ltYWxzKCkpCiAgICAgICAgRVJDMjBQZXJtaXQoX25hbWUpCiAgICB7CiAgICAgICAgbWludGFibGUgPSBfbWludGFibGU7CiAgICAgICAgYnVybmFibGUgPSBfYnVybmFibGU7CiAgICAgICAgcGF1c2FibGUgPSBfcGF1c2FibGU7CiAgICAgICAgX21pbnQoX2luaXRpYWxPd25lciwgX3ByZW1pbnQgKiAxMCAqKiBkZWNpbWFscygpKTsKICAgIH0KCiAgICBmdW5jdGlvbiBzZXRNaW50YWJsZSgpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgaWYgKG1pbnRhYmxlKSB7CiAgICAgICAgICAgIHJldmVydCBpc01pbnRhYmxlTm93KCk7CiAgICAgICAgfQogICAgICAgIG1pbnRhYmxlID0gdHJ1ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBzZXRVbm1pbnRhYmxlKCkgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgICAgICBpZiAoIW1pbnRhYmxlKSB7CiAgICAgICAgICAgIHJldmVydCBub3RNaW50YWJsZSgpOwogICAgICAgIH0KICAgICAgICBtaW50YWJsZSA9IGZhbHNlOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldEJ1cm5hYmxlKCkgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgICAgICBpZiAoYnVybmFibGUpIHsKICAgICAgICAgICAgcmV2ZXJ0IGlzQnVybmFibGVOb3coKTsKICAgICAgICB9CiAgICAgICAgYnVybmFibGUgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldFVuYnVybmFibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmICghYnVybmFibGUpIHsKICAgICAgICAgICAgcmV2ZXJ0IG5vdEJ1cm5hYmxlKCk7CiAgICAgICAgfQogICAgICAgIGJ1cm5hYmxlID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0UGF1c2FibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmIChwYXVzYWJsZSkgewogICAgICAgICAgICByZXZlcnQgaXNQYXVzYWJsZU5vdygpOwogICAgICAgIH0KICAgICAgICBwYXVzYWJsZSA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0VW5wYXVzYWJsZSgpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgaWYgKCFwYXVzYWJsZSkgewogICAgICAgICAgICByZXZlcnQgbm90UGF1c2FibGUoKTsKICAgICAgICB9CiAgICAgICAgcGF1c2FibGUgPSBmYWxzZTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBQYXVzZXMgYWxsIHRva2VuIHRyYW5zZmVycy4KICAgIGZ1bmN0aW9uIHBhdXNlKCkgZXh0ZXJuYWwgb25seU93bmVyIGlzUGF1c2FibGUgewogICAgICAgIF9wYXVzZSgpOwogICAgfQoKICAgIC8vLyBAbm90aWNlIFVucGF1c2VzIHRva2VuIHRyYW5zZmVycy4KICAgIGZ1bmN0aW9uIHVucGF1c2UoKSBleHRlcm5hbCBvbmx5T3duZXIgaXNQYXVzYWJsZSB7CiAgICAgICAgX3VucGF1c2UoKTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBNaW50cyBhZGRpdGlvbmFsIHRva2VucyBhbmQgYXNzaWducyB0aGVtIHRvIHRoZSBzcGVjaWZpZWQgYWRkcmVzcy4KICAgIC8vLyBAcGFyYW0gdG8gVGhlIGFkZHJlc3MgdG8gcmVjZWl2ZSB0aGUgbWludGVkIHRva2Vucy4KICAgIC8vLyBAcGFyYW0gYW1vdW50IFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIG1pbnQuCiAgICBmdW5jdGlvbiBtaW50KGFkZHJlc3MgdG8sIHVpbnQyNTYgYW1vdW50KSBleHRlcm5hbCBvbmx5T3duZXIgaXNNaW50YWJsZSB7CiAgICAgICAgX21pbnQodG8sIGFtb3VudCk7CiAgICB9CgogICAgZnVuY3Rpb24gYnVybih1aW50MjU2IHZhbHVlKSBwdWJsaWMgb3ZlcnJpZGUgaXNCdXJuYWJsZSB7CiAgICAgICAgX2J1cm4oX21zZ1NlbmRlcigpLCB2YWx1ZSk7CiAgICB9CgogICAgZnVuY3Rpb24gYnVybkZyb20oCiAgICAgICAgYWRkcmVzcyBhY2NvdW50LAogICAgICAgIHVpbnQyNTYgdmFsdWUKICAgICkgcHVibGljIG92ZXJyaWRlIGlzQnVybmFibGUgewogICAgICAgIF9zcGVuZEFsbG93YW5jZShhY2NvdW50LCBfbXNnU2VuZGVyKCksIHZhbHVlKTsKICAgICAgICBfYnVybihhY2NvdW50LCB2YWx1ZSk7CiAgICB9CgogICAgLy8vIEBkZXYgT3ZlcnJpZGVzIHRoZSBpbnRlcm5hbCBfdXBkYXRlIGZ1bmN0aW9uIHRvIGluY2x1ZGUgcGF1c2FibGUgYmVoYXZpb3IuCiAgICBmdW5jdGlvbiBfdXBkYXRlKAogICAgICAgIGFkZHJlc3MgZnJvbSwKICAgICAgICBhZGRyZXNzIHRvLAogICAgICAgIHVpbnQyNTYgdmFsdWUKICAgICkgaW50ZXJuYWwgb3ZlcnJpZGUoRVJDMjAsIEVSQzIwUGF1c2FibGUsIEVSQzIwQ2FwcGVkKSB7CiAgICAgICAgc3VwZXIuX3VwZGF0ZShmcm9tLCB0bywgdmFsdWUpOwogICAgfQp9Cg==";
  }
  if (network === "SuperERC20") {
    return "Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVApwcmFnbWEgc29saWRpdHkgMC44LjI0OwoKaW1wb3J0IHtFUkMyMH0gZnJvbSAiQG9wZW56ZXBwZWxpbi9jb250cmFjdHMvdG9rZW4vRVJDMjAvRVJDMjAuc29sIjsKaW1wb3J0IHtFUkMyMEJ1cm5hYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwQnVybmFibGUuc29sIjsKaW1wb3J0IHtFUkMyMFBhdXNhYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy90b2tlbi9FUkMyMC9leHRlbnNpb25zL0VSQzIwUGF1c2FibGUuc29sIjsKaW1wb3J0IHtPd25hYmxlfSBmcm9tICJAb3BlbnplcHBlbGluL2NvbnRyYWN0cy9hY2Nlc3MvT3duYWJsZS5zb2wiOwoKY29udHJhY3QgU3VwZXJFUkMyMCBpcyBFUkMyMCwgRVJDMjBCdXJuYWJsZSwgRVJDMjBQYXVzYWJsZSwgT3duYWJsZSB7CiAgICBib29sIHB1YmxpYyBtaW50YWJsZTsKICAgIGJvb2wgcHVibGljIGJ1cm5hYmxlOwogICAgYm9vbCBwdWJsaWMgcGF1c2FibGU7CgogICAgZXJyb3Igbm90TWludGFibGUoKTsKICAgIGVycm9yIG5vdEJ1cm5hYmxlKCk7CiAgICBlcnJvciBub3RQYXVzYWJsZSgpOwogICAgZXJyb3IgaXNNaW50YWJsZU5vdygpOwogICAgZXJyb3IgaXNCdXJuYWJsZU5vdygpOwogICAgZXJyb3IgaXNQYXVzYWJsZU5vdygpOwoKICAgIG1vZGlmaWVyIGlzQnVybmFibGUoKSB7CiAgICAgICAgaWYgKCFidXJuYWJsZSkgewogICAgICAgICAgICByZXZlcnQgbm90QnVybmFibGUoKTsKICAgICAgICB9CiAgICAgICAgXzsKICAgIH0KCiAgICBtb2RpZmllciBpc1BhdXNhYmxlKCkgewogICAgICAgIGlmICghcGF1c2FibGUpIHsKICAgICAgICAgICAgcmV2ZXJ0IG5vdFBhdXNhYmxlKCk7CiAgICAgICAgfQogICAgICAgIF87CiAgICB9CgogICAgY29uc3RydWN0b3IoCiAgICAgICAgc3RyaW5nIG1lbW9yeSBfbmFtZSwKICAgICAgICBzdHJpbmcgbWVtb3J5IF9zeW1ib2wsCiAgICAgICAgdWludDI1NiBfcHJlbWludCwKICAgICAgICBhZGRyZXNzIF9pbml0aWFsT3duZXIsCiAgICAgICAgYm9vbCBfbWludGFibGUsCiAgICAgICAgYm9vbCBfYnVybmFibGUsCiAgICAgICAgYm9vbCBfcGF1c2FibGUKICAgICkgcGF5YWJsZSBFUkMyMChfbmFtZSwgX3N5bWJvbCkgT3duYWJsZShfaW5pdGlhbE93bmVyKSB7CiAgICAgICAgbWludGFibGUgPSBfbWludGFibGU7CiAgICAgICAgYnVybmFibGUgPSBfYnVybmFibGU7CiAgICAgICAgcGF1c2FibGUgPSBfcGF1c2FibGU7CiAgICAgICAgX21pbnQoX2luaXRpYWxPd25lciwgX3ByZW1pbnQgKiAxMCoqZGVjaW1hbHMoKSk7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0TWludGFibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmKG1pbnRhYmxlKXsKICAgICAgICAgICAgcmV2ZXJ0IGlzTWludGFibGVOb3coKTsKICAgICAgICB9ICAgICAgICAKICAgICAgICBtaW50YWJsZSA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0VW5taW50YWJsZSgpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgaWYoIW1pbnRhYmxlKXsKICAgICAgICAgICAgcmV2ZXJ0IG5vdE1pbnRhYmxlKCk7CiAgICAgICAgfQogICAgICAgIG1pbnRhYmxlID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0QnVybmFibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmKGJ1cm5hYmxlKXsKICAgICAgICAgICAgcmV2ZXJ0IGlzQnVybmFibGVOb3coKTsKICAgICAgICB9ICAgICAgICAKICAgICAgICBidXJuYWJsZSA9IHRydWU7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0VW5idXJuYWJsZSgpIGV4dGVybmFsIG9ubHlPd25lciB7CiAgICAgICAgaWYoIWJ1cm5hYmxlKXsKICAgICAgICAgICAgcmV2ZXJ0IG5vdEJ1cm5hYmxlKCk7CiAgICAgICAgfQogICAgICAgIGJ1cm5hYmxlID0gZmFsc2U7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0UGF1c2FibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmKHBhdXNhYmxlKXsKICAgICAgICAgICAgcmV2ZXJ0IGlzUGF1c2FibGVOb3coKTsKICAgICAgICB9CiAgICAgICAgcGF1c2FibGUgPSB0cnVlOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldFVucGF1c2FibGUoKSBleHRlcm5hbCBvbmx5T3duZXIgewogICAgICAgIGlmKCFwYXVzYWJsZSl7CiAgICAgICAgICAgIHJldmVydCBub3RQYXVzYWJsZSgpOwogICAgICAgIH0gICAgICAgIAogICAgICAgIHBhdXNhYmxlID0gZmFsc2U7CiAgICB9CgogICAgLy8vIEBub3RpY2UgUGF1c2VzIGFsbCB0b2tlbiB0cmFuc2ZlcnMuCiAgICBmdW5jdGlvbiBwYXVzZSgpIGV4dGVybmFsIG9ubHlPd25lciBpc1BhdXNhYmxlIHsKICAgICAgICBfcGF1c2UoKTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBVbnBhdXNlcyB0b2tlbiB0cmFuc2ZlcnMuCiAgICBmdW5jdGlvbiB1bnBhdXNlKCkgZXh0ZXJuYWwgb25seU93bmVyIGlzUGF1c2FibGUgewogICAgICAgIF91bnBhdXNlKCk7CiAgICB9CgogICAgLy8vIEBub3RpY2UgTWludHMgYWRkaXRpb25hbCB0b2tlbnMgYW5kIGFzc2lnbnMgdGhlbSB0byB0aGUgc3BlY2lmaWVkIGFkZHJlc3MuCiAgICAvLy8gQHBhcmFtIHRvIFRoZSBhZGRyZXNzIHRvIHJlY2VpdmUgdGhlIG1pbnRlZCB0b2tlbnMuCiAgICAvLy8gQHBhcmFtIGFtb3VudCBUaGUgYW1vdW50IG9mIHRva2VucyB0byBtaW50LgogICAgZnVuY3Rpb24gbWludChhZGRyZXNzIHRvLCB1aW50MjU2IGFtb3VudCkgZXh0ZXJuYWwgb25seU93bmVyIHsKICAgICAgICBpZiAoIW1pbnRhYmxlKSB7CiAgICAgICAgICAgIHJldmVydCBub3RNaW50YWJsZSgpOwogICAgICAgIH0KICAgICAgICBfbWludCh0bywgYW1vdW50KTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXJuKHVpbnQyNTYgdmFsdWUpIHB1YmxpYyBvdmVycmlkZSBpc0J1cm5hYmxlIHsKICAgICAgICBfYnVybihfbXNnU2VuZGVyKCksIHZhbHVlKTsKICAgIH0KCiAgICBmdW5jdGlvbiBidXJuRnJvbShhZGRyZXNzIGFjY291bnQsIHVpbnQyNTYgdmFsdWUpCiAgICAgICAgcHVibGljCiAgICAgICAgb3ZlcnJpZGUKICAgICAgICBpc0J1cm5hYmxlCiAgICB7CiAgICAgICAgX3NwZW5kQWxsb3dhbmNlKGFjY291bnQsIF9tc2dTZW5kZXIoKSwgdmFsdWUpOwogICAgICAgIF9idXJuKGFjY291bnQsIHZhbHVlKTsKICAgIH0KCiAgICAvLy8gQGRldiBPdmVycmlkZXMgdGhlIGludGVybmFsIF91cGRhdGUgZnVuY3Rpb24gdG8gaW5jbHVkZSBwYXVzYWJsZSBiZWhhdmlvci4KICAgIGZ1bmN0aW9uIF91cGRhdGUoCiAgICAgICAgYWRkcmVzcyBmcm9tLAogICAgICAgIGFkZHJlc3MgdG8sCiAgICAgICAgdWludDI1NiB2YWx1ZQogICAgKSBpbnRlcm5hbCBvdmVycmlkZShFUkMyMCwgRVJDMjBQYXVzYWJsZSkgewogICAgICAgIHN1cGVyLl91cGRhdGUoZnJvbSwgdG8sIHZhbHVlKTsKICAgIH0KfQo=";
  }
};
